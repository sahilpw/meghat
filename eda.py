# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m6DGYLrlhWT2pexkOd5FbHixEJcnB0Mj
"""

'''https://www.kaggle.com/datasets/nanditapore/healthcare-diabetes'''

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

# Load the Diabetes dataset (replace 'diabetes.csv' with your dataset file path)
data = pd.read_csv('/content/Healthcare-Diabetes.csv')
data.fillna(data.mean(), inplace=True)


# Display the first few rows of the dataset
print(data.head())

# Summary statistics
print(data.describe())

# Data distribution (histograms for numerical features)
data.hist(bins=20, figsize=(15, 10))
plt.show()

# Pairwise correlation matrix
correlation_matrix = data.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()

# Box plots for selected features
selected_features = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'Age']
for feature in selected_features:
    sns.boxplot(x='Outcome', y=feature, data=data)
    plt.title(f'{feature} by Outcome')
    plt.show()

# Countplot for the target variable
sns.countplot(x='Outcome', data=data)
plt.title("Distribution of Outcome (0: No Diabetes, 1: Diabetes)")
plt.show()

# Perform K-Means clustering on selected features
features_for_clustering = data[selected_features]
kmeans = KMeans(n_clusters=2, random_state=0)  # You can customize the number of clusters
data['Cluster'] = kmeans.fit_predict(features_for_clustering)

# Visualize the clustering
sns.scatterplot(x='SkinThickness', y='Insulin', hue='Cluster', data=data)
plt.title("K-Means Clustering of Glucose and Age")
plt.show()